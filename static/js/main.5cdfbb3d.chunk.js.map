{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Wrapper/Wrapper.js","components/Title/Title.js","components/Navbar/Navbar.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","clickedPic","id","alt","name","src","image","Wrapper","children","Title","Navbar","score","App","state","friends","friendsClicked","_this","indexOf","handleIncrement","push","randomize","setState","alert","array","i","length","k","Math","floor","random","_ref","randomizePics","_this2","this","components_Wrapper_Wrapper","components_Navbar_Navbar","title","components_Title_Title","map","friend","components_FriendCard_FriendCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"07DAYeA,SATI,SAAAC,GAAK,OACtBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAU,kBAAML,EAAMM,WAAWN,EAAMO,MAE3DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,YCFxBC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCI1CC,SAJD,SAAAd,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACtCH,EAAAC,EAAAC,cAAA,yECOeY,SARA,SAAAf,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,8BACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,GAAG,gBAA/B,UAAsDP,EAAMgB,oBC4EvDC,6MA/DbC,MAAQ,CACNC,UACAH,MAAO,EACPI,eAAgB,MAIlBd,WAAa,SAAAC,GAEX,IAAIa,EAAiBC,EAAKH,MAAME,gBAGI,IAAhCA,EAAeE,QAAQf,IACzBc,EAAKE,kBAELH,EAAeI,KAAKjB,GAGpBc,EAAKI,cAELJ,EAAKK,SAAS,CACZV,MAAO,EACPI,eAAgB,KAElBO,MAAM,mCAKVF,UAAY,WACVJ,EAAKK,SAAS,CAAEP,QAxCpB,SAAuBS,GACrB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADDM,EAElB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkCM,EAAA,GAE9BP,EAAMG,GAFwBI,EAAA,GAI3C,OAAOP,EAmCoBQ,CAAcjB,QAGzCI,gBAAkB,WAChBF,EAAKK,SAAS,CAAEV,MAAOK,EAAKH,MAAMF,MAAQ,6EAKnC,IAAAqB,EAAAC,KACP,OACErC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAACqC,EAAD,CACEC,MAAM,cACNzB,MAAOsB,KAAKpB,MAAMF,QAGpBf,EAAAC,EAAAC,cAACuC,EAAD,MAECJ,KAAKpB,MAAMC,QAAQwB,IAAI,SAAAC,GAAM,OAC5B3C,EAAAC,EAAAC,cAAC0C,EAAD,CACEtC,GAAIqC,EAAOrC,GACXuC,IAAKF,EAAOrC,GACZI,MAAOiC,EAAOjC,MACdL,WAAY+B,EAAK/B,uBAxDXyC,mBCblBC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.5cdfbb3d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FriendCard.css\";\n\nconst FriendCard = props => (\n  <div className=\"card\" onClick={ () => props.clickedPic(props.id)}>\n\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n)\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <div className=\"title\">\n<p>Click an image to score points, Don't click twice!</p>\n</div>\n\nexport default Title;\n","import React from \"react\";\nimport \"./Navbar.css\";\n\nconst Navbar = props => (\n  <nav className= \"navbar navbar-dark bg-dark\">\n        <div className=\"navbar-brand\">\n        </div>\n          <p className=\"navbar-right\" id=\"currentscore\">Score: {props.score}</p>\n  </nav>\n);\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Navbar from \"./components/Navbar\";\nimport \"./App.css\";\n\n\n//Function to shuffle pictures - \nfunction randomizePics(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const k = Math.floor(Math.random() * (i + 1));\n    [array[i], array[k]] = [array[k], array[i]];\n  }\n  return array;\n}\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    score: 0,\n    friendsClicked: []\n  };\n\n  //To handle \"clicking\" of friends\n  clickedPic = id => {\n    //Variables to be updated\n    let friendsClicked = this.state.friendsClicked;\n\n    //Handle clicked image- if not clicked, continue, if clicked, reset score\n    if (friendsClicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      //Store id in 'clicked array'\n      friendsClicked.push(id)\n      //randomize pics\n      // .then(randomizePics(friends));\n      this.randomize();\n    } else {\n      this.setState({\n        score: 0,\n        friendsClicked: []\n      });\n      alert(\"Finish him! Sorry, you lost\")\n    }\n  }\n\n  //randomize pictures\n  randomize = () => {\n    this.setState({ friends: randomizePics(friends) })\n  };\n  //Increase score\n  handleIncrement = () => {\n    this.setState({ score: this.state.score + 1 })\n  };\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Navbar\n          title=\"Clicky Game\"\n          score={this.state.score}\n        />\n\n        <Title></Title>\n\n        {this.state.friends.map(friend => (\n          <FriendCard\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n            clickedPic={this.clickedPic}\n          />\n        ))}\n\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}